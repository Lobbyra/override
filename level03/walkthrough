1. The checksec tool shows that most protections are enabled, so the only way to hack is by manipulating the value I use.
2. The binary consists of 3 functions: main(), test(), and decrypt().
3. Here's what each function does:
   a. main():
      - Prints a prompt asking for a password and uses scanf with the "%d" format.
      - Calls the test() function with the scanf result and 0x1337d00d as parameters.
   b. test():
      - Subtracts the second parameter from the first one (0x1337d00d - [user input as an integer]).
      - If the result is between 0 and 10 or between 0xf and 0x16, calls decrypt() with the subtraction result as a parameter. Otherwise, calls decrypt() with a random integer.
   c. decrypt():
      - Performs various calculations using its first parameter.
      - The function has two possible outcomes: either it spawns a shell or it prints "Invalid password."
4. Now that you have the explanation, here's the clever thing I did. I manually tested each possibility from 0 to 18 as the result of the subtraction. 18 is the value that triggers the shell spawn.
5. Here's the final exploit command: (perl -e 'print "322424827"'; cat -) | ./level03
